openapi: "3.0.0"
info:
    title: "An Exmaple Simple OAS Specification"
    version: "1.0.0"
    description: |
        #Sequence diagram for the API - dependencies
        ```mermaid
            sequenceDiagram
            autonumber
                Buyer->>+Shopify Store: Checkout Process
                Shopify Store->>+AL Now App: Present Shoping Option "chekout-options"
                AL Now App->>AL Now Server: Get me some timeslots
                AL Now Server->>HL Back End: Get timeslots for the day
                HL Back End-->> AL Now Server: Return timeslots
                AL Now Server-->>AL Now App: Pass timeslots array ( to do the flow of error...)  
                AL Now App-->>+AL Now App: Save in metafields
                AL Now App-->>AL Now Server: Get a price for {{timeslotID}}
                AL Now Server->>HL Back End: Get me a price for {{timeslotID}}
                HL Back End-->>AL Now Server: Return the price
                AL Now Server-->>AL Now App: Store ( do nothing for now)
                Buyer->>Shopify Store: Complete Order and Payment
                Shopify Store->>Shopify Webhook: Trigger on Success 'orders/create' event
                Shopify Webhook-->>AL Now App: Send the webhook
                AL Now App->>AL Now Server: On 200 OK and IF( Shipping Option == `AddLee Now`)
                AL Now Server->>+HL Back End: Create (POST) /bookings/create the AL Now ( account 50)
                HL Back End-->>-AL Now Server: Return Booking details 
                AL Now Server-->>AL Now App: Pass the booking details 
                AL Now App -->>-AL Now App: Use the AL Now Booking details in Thanks You Extension
                AL Now App-->>Shopify Store: Render the Extention
                Shopify Store->>-Buyer: Render the Thank you page 
        ```
    
servers:
    - url: "http://localhost:80"
      description: "Development server"
    - url: "http://localhost:8888"
      description: "Another server..."

paths:
    /users:
        get:
            summary: "Get all users"
            responses:
                200:
                    description: |
                    "Successful response"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: "#/components/schemas/User"
        post:
            summary: "Create a new user"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                201:
                    description: "User created successfully"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
components:
    schemas:
        User:
            type: "object"
            properties:
                id:
                    type: "integer"
                name:
                    type: "string"
                email:
                    type: "string"
                age:
                    type: "integer"
